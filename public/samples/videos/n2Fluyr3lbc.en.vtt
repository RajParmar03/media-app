WEBVTT
Kind: captions
Language: en

00:00:00.020 --> 00:00:02.930 align:start position:0%
 
postgresql<00:00:01.020><c> the</c><00:00:01.560><c> most</c><00:00:01.800><c> trusted</c><00:00:02.220><c> name</c><00:00:02.399><c> in</c><00:00:02.760><c> Open</c>

00:00:02.930 --> 00:00:02.940 align:start position:0%
postgresql the most trusted name in Open
 

00:00:02.940 --> 00:00:05.030 align:start position:0%
postgresql the most trusted name in Open
Source<00:00:03.419><c> relational</c><00:00:03.780><c> databases</c><00:00:04.500><c> its</c>

00:00:05.030 --> 00:00:05.040 align:start position:0%
Source relational databases its
 

00:00:05.040 --> 00:00:06.349 align:start position:0%
Source relational databases its
development<00:00:05.279><c> dates</c><00:00:05.640><c> all</c><00:00:05.819><c> the</c><00:00:05.940><c> way</c><00:00:06.000><c> back</c><00:00:06.120><c> to</c>

00:00:06.349 --> 00:00:06.359 align:start position:0%
development dates all the way back to
 

00:00:06.359 --> 00:00:08.810 align:start position:0%
development dates all the way back to
1986<00:00:07.080><c> at</c><00:00:07.440><c> UC</c><00:00:07.740><c> Berkeley</c><00:00:08.099><c> under</c><00:00:08.400><c> the</c><00:00:08.639><c> direction</c>

00:00:08.810 --> 00:00:08.820 align:start position:0%
1986 at UC Berkeley under the direction
 

00:00:08.820 --> 00:00:11.330 align:start position:0%
1986 at UC Berkeley under the direction
of<00:00:09.300><c> Michael</c><00:00:09.540><c> Stonebreaker</c><00:00:10.380><c> like</c><00:00:10.800><c> other</c><00:00:11.040><c> pure</c>

00:00:11.330 --> 00:00:11.340 align:start position:0%
of Michael Stonebreaker like other pure
 

00:00:11.340 --> 00:00:13.610 align:start position:0%
of Michael Stonebreaker like other pure
relational<00:00:11.700><c> databases</c><00:00:12.360><c> it</c><00:00:12.719><c> stores</c><00:00:12.960><c> data</c><00:00:13.380><c> in</c>

00:00:13.610 --> 00:00:13.620 align:start position:0%
relational databases it stores data in
 

00:00:13.620 --> 00:00:15.589 align:start position:0%
relational databases it stores data in
tables<00:00:14.040><c> columns</c><00:00:14.519><c> and</c><00:00:14.639><c> rows</c><00:00:14.940><c> and</c><00:00:15.240><c> uses</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
tables columns and rows and uses
 

00:00:15.599 --> 00:00:17.510 align:start position:0%
tables columns and rows and uses
structured<00:00:16.080><c> query</c><00:00:16.379><c> language</c><00:00:16.619><c> to</c><00:00:17.100><c> read</c><00:00:17.279><c> and</c>

00:00:17.510 --> 00:00:17.520 align:start position:0%
structured query language to read and
 

00:00:17.520 --> 00:00:19.310 align:start position:0%
structured query language to read and
write<00:00:17.699><c> data</c><00:00:18.119><c> however</c><00:00:18.420><c> postgres</c><00:00:19.020><c> is</c>

00:00:19.310 --> 00:00:19.320 align:start position:0%
write data however postgres is
 

00:00:19.320 --> 00:00:20.750 align:start position:0%
write data however postgres is
technically<00:00:19.680><c> an</c><00:00:20.039><c> object</c><00:00:20.340><c> relational</c>

00:00:20.750 --> 00:00:20.760 align:start position:0%
technically an object relational
 

00:00:20.760 --> 00:00:22.609 align:start position:0%
technically an object relational
database<00:00:21.300><c> which</c><00:00:21.660><c> means</c><00:00:21.900><c> it</c><00:00:22.020><c> can</c><00:00:22.140><c> create</c><00:00:22.320><c> its</c>

00:00:22.609 --> 00:00:22.619 align:start position:0%
database which means it can create its
 

00:00:22.619 --> 00:00:24.650 align:start position:0%
database which means it can create its
own<00:00:22.680><c> custom</c><00:00:22.920><c> data</c><00:00:23.400><c> types</c><00:00:23.640><c> to</c><00:00:23.880><c> store</c><00:00:24.119><c> objects</c>

00:00:24.650 --> 00:00:24.660 align:start position:0%
own custom data types to store objects
 

00:00:24.660 --> 00:00:26.269 align:start position:0%
own custom data types to store objects
with<00:00:24.840><c> properties</c><00:00:25.260><c> and</c><00:00:25.619><c> support</c><00:00:25.800><c> Advanced</c>

00:00:26.269 --> 00:00:26.279 align:start position:0%
with properties and support Advanced
 

00:00:26.279 --> 00:00:27.710 align:start position:0%
with properties and support Advanced
features<00:00:26.640><c> like</c><00:00:26.880><c> inheritance</c><00:00:27.539><c> and</c>

00:00:27.710 --> 00:00:27.720 align:start position:0%
features like inheritance and
 

00:00:27.720 --> 00:00:29.870 align:start position:0%
features like inheritance and
polymorphism<00:00:28.380><c> when</c><00:00:28.740><c> writing</c><00:00:29.099><c> data</c><00:00:29.340><c> it</c><00:00:29.519><c> runs</c>

00:00:29.870 --> 00:00:29.880 align:start position:0%
polymorphism when writing data it runs
 

00:00:29.880 --> 00:00:32.150 align:start position:0%
polymorphism when writing data it runs
fully<00:00:30.240><c> acid</c><00:00:30.539><c> compliant</c><00:00:31.080><c> transactions</c><00:00:31.740><c> but</c>

00:00:32.150 --> 00:00:32.160 align:start position:0%
fully acid compliant transactions but
 

00:00:32.160 --> 00:00:34.010 align:start position:0%
fully acid compliant transactions but
also<00:00:32.460><c> adds</c><00:00:32.759><c> its</c><00:00:33.000><c> own</c><00:00:33.000><c> special</c><00:00:33.239><c> sauce</c><00:00:33.600><c> called</c>

00:00:34.010 --> 00:00:34.020 align:start position:0%
also adds its own special sauce called
 

00:00:34.020 --> 00:00:36.049 align:start position:0%
also adds its own special sauce called
multiversion<00:00:34.739><c> concurrency</c><00:00:35.280><c> control</c><00:00:35.579><c> which</c>

00:00:36.049 --> 00:00:36.059 align:start position:0%
multiversion concurrency control which
 

00:00:36.059 --> 00:00:38.330 align:start position:0%
multiversion concurrency control which
gives<00:00:36.360><c> each</c><00:00:36.660><c> transaction</c><00:00:37.140><c> a</c><00:00:37.680><c> snapshot</c><00:00:38.040><c> of</c><00:00:38.219><c> the</c>

00:00:38.330 --> 00:00:38.340 align:start position:0%
gives each transaction a snapshot of the
 

00:00:38.340 --> 00:00:40.190 align:start position:0%
gives each transaction a snapshot of the
database<00:00:38.700><c> allowing</c><00:00:39.180><c> multiple</c><00:00:39.600><c> transactions</c>

00:00:40.190 --> 00:00:40.200 align:start position:0%
database allowing multiple transactions
 

00:00:40.200 --> 00:00:41.990 align:start position:0%
database allowing multiple transactions
to<00:00:40.379><c> run</c><00:00:40.500><c> at</c><00:00:40.680><c> the</c><00:00:40.800><c> same</c><00:00:40.980><c> time</c><00:00:41.160><c> without</c><00:00:41.579><c> traffic</c>

00:00:41.990 --> 00:00:42.000 align:start position:0%
to run at the same time without traffic
 

00:00:42.000 --> 00:00:44.569 align:start position:0%
to run at the same time without traffic
jams<00:00:42.480><c> or</c><00:00:42.660><c> locks</c><00:00:43.020><c> developers</c><00:00:43.680><c> also</c><00:00:44.040><c> love</c><00:00:44.219><c> its</c>

00:00:44.569 --> 00:00:44.579 align:start position:0%
jams or locks developers also love its
 

00:00:44.579 --> 00:00:46.670 align:start position:0%
jams or locks developers also love its
extensibility<00:00:45.059><c> queries</c><00:00:45.719><c> can</c><00:00:45.899><c> be</c><00:00:46.079><c> reused</c><00:00:46.500><c> by</c>

00:00:46.670 --> 00:00:46.680 align:start position:0%
extensibility queries can be reused by
 

00:00:46.680 --> 00:00:48.529 align:start position:0%
extensibility queries can be reused by
writing<00:00:47.040><c> stored</c><00:00:47.399><c> procedures</c><00:00:47.820><c> and</c><00:00:48.300><c> it</c><00:00:48.420><c> even</c>

00:00:48.529 --> 00:00:48.539 align:start position:0%
writing stored procedures and it even
 

00:00:48.539 --> 00:00:50.690 align:start position:0%
writing stored procedures and it even
supports<00:00:48.960><c> languages</c><00:00:49.320><c> Beyond</c><00:00:49.739><c> SQL</c><00:00:50.340><c> like</c>

00:00:50.690 --> 00:00:50.700 align:start position:0%
supports languages Beyond SQL like
 

00:00:50.700 --> 00:00:52.670 align:start position:0%
supports languages Beyond SQL like
Python<00:00:51.120><c> and</c><00:00:51.300><c> c</c><00:00:51.539><c> and</c><00:00:51.960><c> it</c><00:00:52.140><c> has</c><00:00:52.260><c> a</c><00:00:52.440><c> robust</c>

00:00:52.670 --> 00:00:52.680 align:start position:0%
Python and c and it has a robust
 

00:00:52.680 --> 00:00:55.549 align:start position:0%
Python and c and it has a robust
ecosystem<00:00:53.219><c> of</c><00:00:53.579><c> extensions</c><00:00:54.059><c> like</c><00:00:54.480><c> post</c><00:00:54.719><c> GIS</c><00:00:55.140><c> to</c>

00:00:55.549 --> 00:00:55.559 align:start position:0%
ecosystem of extensions like post GIS to
 

00:00:55.559 --> 00:00:57.529 align:start position:0%
ecosystem of extensions like post GIS to
provide<00:00:55.800><c> geospatial</c><00:00:56.520><c> data</c><00:00:56.820><c> for</c><00:00:57.059><c> apps</c><00:00:57.420><c> like</c>

00:00:57.529 --> 00:00:57.539 align:start position:0%
provide geospatial data for apps like
 

00:00:57.539 --> 00:00:59.689 align:start position:0%
provide geospatial data for apps like
Uber<00:00:57.960><c> or</c><00:00:58.140><c> cytus</c><00:00:58.680><c> who</c><00:00:58.920><c> Shard</c><00:00:59.219><c> and</c><00:00:59.460><c> distribute</c>

00:00:59.689 --> 00:00:59.699 align:start position:0%
Uber or cytus who Shard and distribute
 

00:00:59.699 --> 00:01:01.850 align:start position:0%
Uber or cytus who Shard and distribute
the<00:00:59.760><c> data</c><00:00:59.940><c> base</c><00:01:00.360><c> to</c><00:01:00.660><c> any</c><00:01:00.899><c> scale</c><00:01:01.199><c> or</c><00:01:01.500><c> PG</c>

00:01:01.850 --> 00:01:01.860 align:start position:0%
the data base to any scale or PG
 

00:01:01.860 --> 00:01:03.889 align:start position:0%
the data base to any scale or PG
embedding<00:01:02.340><c> to</c><00:01:02.520><c> give</c><00:01:02.579><c> AI</c><00:01:02.879><c> chatbots</c><00:01:03.359><c> long-term</c>

00:01:03.889 --> 00:01:03.899 align:start position:0%
embedding to give AI chatbots long-term
 

00:01:03.899 --> 00:01:05.570 align:start position:0%
embedding to give AI chatbots long-term
memory<00:01:04.140><c> and</c><00:01:04.440><c> the</c><00:01:04.619><c> list</c><00:01:04.739><c> goes</c><00:01:05.040><c> on</c><00:01:05.159><c> to</c><00:01:05.339><c> get</c>

00:01:05.570 --> 00:01:05.580 align:start position:0%
memory and the list goes on to get
 

00:01:05.580 --> 00:01:07.250 align:start position:0%
memory and the list goes on to get
started<00:01:05.880><c> you</c><00:01:06.180><c> can</c><00:01:06.299><c> download</c><00:01:06.479><c> and</c><00:01:06.780><c> install</c><00:01:06.960><c> it</c>

00:01:07.250 --> 00:01:07.260 align:start position:0%
started you can download and install it
 

00:01:07.260 --> 00:01:09.230 align:start position:0%
started you can download and install it
locally<00:01:07.560><c> or</c><00:01:07.920><c> better</c><00:01:08.100><c> yet</c><00:01:08.340><c> use</c><00:01:08.580><c> a</c><00:01:08.820><c> free</c><00:01:08.939><c> Cloud</c>

00:01:09.230 --> 00:01:09.240 align:start position:0%
locally or better yet use a free Cloud
 

00:01:09.240 --> 00:01:11.270 align:start position:0%
locally or better yet use a free Cloud
database<00:01:09.659><c> like</c><00:01:10.020><c> neon</c><00:01:10.380><c> which</c><00:01:10.740><c> provides</c><00:01:11.100><c> Auto</c>

00:01:11.270 --> 00:01:11.280 align:start position:0%
database like neon which provides Auto
 

00:01:11.280 --> 00:01:13.609 align:start position:0%
database like neon which provides Auto
scaling<00:01:11.700><c> out</c><00:01:11.880><c> of</c><00:01:12.000><c> the</c><00:01:12.119><c> box</c><00:01:12.240><c> and</c><00:01:12.659><c> a</c><00:01:12.840><c> nice</c><00:01:12.960><c> UI</c><00:01:13.439><c> to</c>

00:01:13.609 --> 00:01:13.619 align:start position:0%
scaling out of the box and a nice UI to
 

00:01:13.619 --> 00:01:15.350 align:start position:0%
scaling out of the box and a nice UI to
manage<00:01:13.979><c> your</c><00:01:14.100><c> data</c><00:01:14.400><c> in</c><00:01:14.640><c> addition</c><00:01:14.820><c> to</c><00:01:15.060><c> a</c><00:01:15.240><c> bunch</c>

00:01:15.350 --> 00:01:15.360 align:start position:0%
manage your data in addition to a bunch
 

00:01:15.360 --> 00:01:16.730 align:start position:0%
manage your data in addition to a bunch
of<00:01:15.479><c> other</c><00:01:15.720><c> Advanced</c><00:01:16.140><c> features</c><00:01:16.500><c> like</c>

00:01:16.730 --> 00:01:16.740 align:start position:0%
of other Advanced features like
 

00:01:16.740 --> 00:01:18.350 align:start position:0%
of other Advanced features like
branching<00:01:17.220><c> create</c><00:01:17.460><c> a</c><00:01:17.640><c> new</c><00:01:17.760><c> database</c><00:01:18.060><c> then</c>

00:01:18.350 --> 00:01:18.360 align:start position:0%
branching create a new database then
 

00:01:18.360 --> 00:01:20.210 align:start position:0%
branching create a new database then
head<00:01:18.540><c> over</c><00:01:18.659><c> to</c><00:01:18.840><c> the</c><00:01:18.900><c> SQL</c><00:01:19.200><c> Editor</c><00:01:19.560><c> to</c><00:01:19.860><c> run</c><00:01:19.979><c> your</c>

00:01:20.210 --> 00:01:20.220 align:start position:0%
head over to the SQL Editor to run your
 

00:01:20.220 --> 00:01:21.710 align:start position:0%
head over to the SQL Editor to run your
first<00:01:20.400><c> query</c><00:01:20.700><c> or</c><00:01:20.939><c> connect</c><00:01:21.180><c> it</c><00:01:21.360><c> to</c><00:01:21.479><c> your</c><00:01:21.540><c> IDE</c>

00:01:21.710 --> 00:01:21.720 align:start position:0%
first query or connect it to your IDE
 

00:01:21.720 --> 00:01:23.810 align:start position:0%
first query or connect it to your IDE
with<00:01:22.200><c> an</c><00:01:22.380><c> extension</c><00:01:22.680><c> like</c><00:01:22.860><c> SQL</c><00:01:23.280><c> tools</c><00:01:23.580><c> we</c>

00:01:23.810 --> 00:01:23.820 align:start position:0%
with an extension like SQL tools we
 

00:01:23.820 --> 00:01:25.310 align:start position:0%
with an extension like SQL tools we
could<00:01:23.939><c> get</c><00:01:24.119><c> started</c><00:01:24.479><c> by</c><00:01:24.720><c> creating</c><00:01:25.080><c> a</c><00:01:25.259><c> new</c>

00:01:25.310 --> 00:01:25.320 align:start position:0%
could get started by creating a new
 

00:01:25.320 --> 00:01:26.929 align:start position:0%
could get started by creating a new
table<00:01:25.500><c> but</c><00:01:25.860><c> because</c><00:01:26.040><c> this</c><00:01:26.340><c> is</c><00:01:26.460><c> an</c><00:01:26.640><c> object</c>

00:01:26.929 --> 00:01:26.939 align:start position:0%
table but because this is an object
 

00:01:26.939 --> 00:01:28.969 align:start position:0%
table but because this is an object
relational<00:01:27.360><c> database</c><00:01:27.900><c> let's</c><00:01:28.380><c> begin</c><00:01:28.560><c> by</c>

00:01:28.969 --> 00:01:28.979 align:start position:0%
relational database let's begin by
 

00:01:28.979 --> 00:01:30.649 align:start position:0%
relational database let's begin by
creating<00:01:29.340><c> a</c><00:01:29.520><c> custom</c><00:01:29.700><c> data</c><00:01:30.180><c> type</c><00:01:30.299><c> which</c>

00:01:30.649 --> 00:01:30.659 align:start position:0%
creating a custom data type which
 

00:01:30.659 --> 00:01:32.450 align:start position:0%
creating a custom data type which
defines<00:01:31.020><c> the</c><00:01:31.200><c> structure</c><00:01:31.560><c> of</c><00:01:31.680><c> an</c><00:01:31.860><c> object</c><00:01:32.100><c> with</c>

00:01:32.450 --> 00:01:32.460 align:start position:0%
defines the structure of an object with
 

00:01:32.460 --> 00:01:34.190 align:start position:0%
defines the structure of an object with
corresponding<00:01:33.119><c> properties</c><00:01:33.540><c> and</c><00:01:33.840><c> types</c>

00:01:34.190 --> 00:01:34.200 align:start position:0%
corresponding properties and types
 

00:01:34.200 --> 00:01:35.870 align:start position:0%
corresponding properties and types
what's<00:01:34.439><c> awesome</c><00:01:34.680><c> about</c><00:01:34.920><c> postgres</c><00:01:35.340><c> though</c><00:01:35.700><c> is</c>

00:01:35.870 --> 00:01:35.880 align:start position:0%
what's awesome about postgres though is
 

00:01:35.880 --> 00:01:37.730 align:start position:0%
what's awesome about postgres though is
that<00:01:36.000><c> we</c><00:01:36.180><c> have</c><00:01:36.299><c> more</c><00:01:36.540><c> exotic</c><00:01:37.079><c> data</c><00:01:37.439><c> modeling</c>

00:01:37.730 --> 00:01:37.740 align:start position:0%
that we have more exotic data modeling
 

00:01:37.740 --> 00:01:39.649 align:start position:0%
that we have more exotic data modeling
options<00:01:38.159><c> like</c><00:01:38.520><c> arrays</c><00:01:39.000><c> can</c><00:01:39.119><c> be</c><00:01:39.240><c> used</c><00:01:39.360><c> by</c>

00:01:39.649 --> 00:01:39.659 align:start position:0%
options like arrays can be used by
 

00:01:39.659 --> 00:01:41.450 align:start position:0%
options like arrays can be used by
putting<00:01:39.900><c> brackets</c><00:01:40.259><c> in</c><00:01:40.500><c> front</c><00:01:40.619><c> of</c><00:01:40.740><c> a</c><00:01:40.860><c> type</c><00:01:41.040><c> then</c>

00:01:41.450 --> 00:01:41.460 align:start position:0%
putting brackets in front of a type then
 

00:01:41.460 --> 00:01:43.010 align:start position:0%
putting brackets in front of a type then
make<00:01:41.700><c> it</c><00:01:41.820><c> a</c><00:01:41.939><c> two-dimensional</c><00:01:42.479><c> array</c><00:01:42.780><c> by</c>

00:01:43.010 --> 00:01:43.020 align:start position:0%
make it a two-dimensional array by
 

00:01:43.020 --> 00:01:44.929 align:start position:0%
make it a two-dimensional array by
adding<00:01:43.320><c> another</c><00:01:43.560><c> set</c><00:01:43.860><c> of</c><00:01:44.040><c> brackets</c><00:01:44.340><c> we</c><00:01:44.700><c> also</c>

00:01:44.929 --> 00:01:44.939 align:start position:0%
adding another set of brackets we also
 

00:01:44.939 --> 00:01:46.609 align:start position:0%
adding another set of brackets we also
have<00:01:45.060><c> Json</c><00:01:45.420><c> data</c><00:01:45.900><c> types</c><00:01:46.140><c> to</c><00:01:46.320><c> handle</c>

00:01:46.609 --> 00:01:46.619 align:start position:0%
have Json data types to handle
 

00:01:46.619 --> 00:01:48.469 align:start position:0%
have Json data types to handle
unstructured<00:01:47.280><c> data</c><00:01:47.579><c> and</c><00:01:47.880><c> even</c><00:01:48.060><c> key</c><00:01:48.299><c> value</c>

00:01:48.469 --> 00:01:48.479 align:start position:0%
unstructured data and even key value
 

00:01:48.479 --> 00:01:50.630 align:start position:0%
unstructured data and even key value
pairs<00:01:48.900><c> with</c><00:01:49.079><c> extensions</c><00:01:49.500><c> like</c><00:01:49.740><c> h-store</c><00:01:50.399><c> now</c>

00:01:50.630 --> 00:01:50.640 align:start position:0%
pairs with extensions like h-store now
 

00:01:50.640 --> 00:01:52.370 align:start position:0%
pairs with extensions like h-store now
that<00:01:50.820><c> we</c><00:01:50.939><c> have</c><00:01:51.000><c> this</c><00:01:51.240><c> custom</c><00:01:51.420><c> type</c><00:01:51.720><c> we</c><00:01:52.079><c> can</c><00:01:52.259><c> use</c>

00:01:52.370 --> 00:01:52.380 align:start position:0%
that we have this custom type we can use
 

00:01:52.380 --> 00:01:54.230 align:start position:0%
that we have this custom type we can use
it<00:01:52.560><c> within</c><00:01:52.860><c> one</c><00:01:53.040><c> or</c><00:01:53.159><c> more</c><00:01:53.340><c> tables</c><00:01:53.759><c> like</c><00:01:54.000><c> one</c>

00:01:54.230 --> 00:01:54.240 align:start position:0%
it within one or more tables like one
 

00:01:54.240 --> 00:01:56.030 align:start position:0%
it within one or more tables like one
table<00:01:54.420><c> for</c><00:01:54.659><c> programmers</c><00:01:55.200><c> and</c><00:01:55.500><c> another</c><00:01:55.680><c> for</c>

00:01:56.030 --> 00:01:56.040 align:start position:0%
table for programmers and another for
 

00:01:56.040 --> 00:01:58.069 align:start position:0%
table for programmers and another for
designers<00:01:56.579><c> once</c><00:01:57.000><c> the</c><00:01:57.119><c> table</c><00:01:57.240><c> is</c><00:01:57.479><c> created</c><00:01:57.780><c> we</c>

00:01:58.069 --> 00:01:58.079 align:start position:0%
designers once the table is created we
 

00:01:58.079 --> 00:01:59.630 align:start position:0%
designers once the table is created we
can<00:01:58.200><c> then</c><00:01:58.320><c> use</c><00:01:58.500><c> an</c><00:01:58.680><c> insert</c><00:01:58.979><c> statement</c><00:01:59.340><c> to</c><00:01:59.520><c> add</c>

00:01:59.630 --> 00:01:59.640 align:start position:0%
can then use an insert statement to add
 

00:01:59.640 --> 00:02:01.670 align:start position:0%
can then use an insert statement to add
a<00:01:59.759><c> row</c><00:01:59.880><c> of</c><00:02:00.240><c> data</c><00:02:00.540><c> into</c><00:02:00.659><c> it</c><00:02:00.899><c> notice</c><00:02:01.259><c> the</c><00:02:01.380><c> use</c><00:02:01.500><c> of</c>

00:02:01.670 --> 00:02:01.680 align:start position:0%
a row of data into it notice the use of
 

00:02:01.680 --> 00:02:03.710 align:start position:0%
a row of data into it notice the use of
a<00:02:01.860><c> double</c><00:02:01.920><c> colon</c><00:02:02.399><c> to</c><00:02:02.700><c> cast</c><00:02:02.880><c> a</c><00:02:03.119><c> string</c><00:02:03.479><c> into</c>

00:02:03.710 --> 00:02:03.720 align:start position:0%
a double colon to cast a string into
 

00:02:03.720 --> 00:02:06.530 align:start position:0%
a double colon to cast a string into
Json<00:02:04.259><c> or</c><00:02:04.560><c> H</c><00:02:04.799><c> store</c><00:02:05.040><c> types</c><00:02:05.520><c> and</c><00:02:05.759><c> now</c><00:02:05.939><c> finally</c><00:02:06.240><c> we</c>

00:02:06.530 --> 00:02:06.540 align:start position:0%
Json or H store types and now finally we
 

00:02:06.540 --> 00:02:07.850 align:start position:0%
Json or H store types and now finally we
can<00:02:06.659><c> read</c><00:02:06.780><c> the</c><00:02:06.960><c> data</c><00:02:07.200><c> with</c><00:02:07.380><c> a</c><00:02:07.560><c> select</c>

00:02:07.850 --> 00:02:07.860 align:start position:0%
can read the data with a select
 

00:02:07.860 --> 00:02:09.710 align:start position:0%
can read the data with a select
statement<00:02:08.160><c> that</c><00:02:08.459><c> uses</c><00:02:08.700><c> dot</c><00:02:09.000><c> notation</c><00:02:09.360><c> to</c>

00:02:09.710 --> 00:02:09.720 align:start position:0%
statement that uses dot notation to
 

00:02:09.720 --> 00:02:11.270 align:start position:0%
statement that uses dot notation to
access<00:02:09.959><c> the</c><00:02:10.319><c> properties</c><00:02:10.619><c> on</c><00:02:10.979><c> our</c><00:02:11.099><c> custom</c>

00:02:11.270 --> 00:02:11.280 align:start position:0%
access the properties on our custom
 

00:02:11.280 --> 00:02:13.490 align:start position:0%
access the properties on our custom
object<00:02:11.760><c> every</c><00:02:12.120><c> table</c><00:02:12.360><c> has</c><00:02:12.660><c> a</c><00:02:12.840><c> unique</c><00:02:13.080><c> primary</c>

00:02:13.490 --> 00:02:13.500 align:start position:0%
object every table has a unique primary
 

00:02:13.500 --> 00:02:15.530 align:start position:0%
object every table has a unique primary
key<00:02:13.739><c> and</c><00:02:14.099><c> we</c><00:02:14.220><c> can</c><00:02:14.340><c> create</c><00:02:14.520><c> Relationships</c><00:02:15.300><c> by</c>

00:02:15.530 --> 00:02:15.540 align:start position:0%
key and we can create Relationships by
 

00:02:15.540 --> 00:02:17.150 align:start position:0%
key and we can create Relationships by
storing<00:02:15.900><c> the</c><00:02:16.080><c> primary</c><00:02:16.379><c> key</c><00:02:16.560><c> from</c><00:02:16.800><c> one</c><00:02:16.980><c> table</c>

00:02:17.150 --> 00:02:17.160 align:start position:0%
storing the primary key from one table
 

00:02:17.160 --> 00:02:19.309 align:start position:0%
storing the primary key from one table
as<00:02:17.640><c> the</c><00:02:17.819><c> foreign</c><00:02:18.120><c> key</c><00:02:18.300><c> on</c><00:02:18.480><c> another</c><00:02:18.660><c> like</c><00:02:19.020><c> a</c>

00:02:19.309 --> 00:02:19.319 align:start position:0%
as the foreign key on another like a
 

00:02:19.319 --> 00:02:21.470 align:start position:0%
as the foreign key on another like a
programmer<00:02:19.739><c> might</c><00:02:19.980><c> own</c><00:02:20.220><c> many</c><00:02:20.459><c> Lambos</c><00:02:20.940><c> we</c><00:02:21.360><c> can</c>

00:02:21.470 --> 00:02:21.480 align:start position:0%
programmer might own many Lambos we can
 

00:02:21.480 --> 00:02:23.330 align:start position:0%
programmer might own many Lambos we can
then<00:02:21.599><c> find</c><00:02:21.780><c> those</c><00:02:21.959><c> Lambos</c><00:02:22.379><c> by</c><00:02:22.680><c> doing</c><00:02:22.800><c> a</c><00:02:23.099><c> join</c>

00:02:23.330 --> 00:02:23.340 align:start position:0%
then find those Lambos by doing a join
 

00:02:23.340 --> 00:02:25.070 align:start position:0%
then find those Lambos by doing a join
query<00:02:23.640><c> that</c><00:02:23.819><c> compares</c><00:02:24.239><c> the</c><00:02:24.420><c> programmer's</c><00:02:24.959><c> ID</c>

00:02:25.070 --> 00:02:25.080 align:start position:0%
query that compares the programmer's ID
 

00:02:25.080 --> 00:02:27.350 align:start position:0%
query that compares the programmer's ID
to<00:02:25.500><c> the</c><00:02:25.680><c> lambo's</c><00:02:26.160><c> owner</c><00:02:26.520><c> ID</c><00:02:26.640><c> this</c><00:02:27.120><c> has</c><00:02:27.239><c> been</c>

00:02:27.350 --> 00:02:27.360 align:start position:0%
to the lambo's owner ID this has been
 

00:02:27.360 --> 00:02:30.050 align:start position:0%
to the lambo's owner ID this has been
postgresql<00:02:28.260><c> in</c><00:02:28.680><c> 100</c><00:02:28.860><c> seconds</c><00:02:29.280><c> big</c><00:02:29.760><c> shout</c><00:02:30.000><c> out</c>

00:02:30.050 --> 00:02:30.060 align:start position:0%
postgresql in 100 seconds big shout out
 

00:02:30.060 --> 00:02:32.089 align:start position:0%
postgresql in 100 seconds big shout out
to<00:02:30.239><c> Neon</c><00:02:30.540><c> DB</c><00:02:30.840><c> for</c><00:02:31.020><c> sponsoring</c><00:02:31.620><c> and</c><00:02:31.920><c> making</c>

00:02:32.089 --> 00:02:32.099 align:start position:0%
to Neon DB for sponsoring and making
 

00:02:32.099 --> 00:02:33.890 align:start position:0%
to Neon DB for sponsoring and making
this<00:02:32.340><c> awesome</c><00:02:32.520><c> database</c><00:02:33.000><c> free</c><00:02:33.239><c> to</c><00:02:33.480><c> use</c><00:02:33.540><c> in</c><00:02:33.780><c> the</c>

00:02:33.890 --> 00:02:33.900 align:start position:0%
this awesome database free to use in the
 

00:02:33.900 --> 00:02:35.750 align:start position:0%
this awesome database free to use in the
cloud<00:02:34.020><c> thanks</c><00:02:34.500><c> for</c><00:02:34.620><c> watching</c><00:02:34.980><c> and</c><00:02:35.220><c> I</c><00:02:35.400><c> will</c><00:02:35.580><c> see</c>

00:02:35.750 --> 00:02:35.760 align:start position:0%
cloud thanks for watching and I will see
 

00:02:35.760 --> 00:02:38.300 align:start position:0%
cloud thanks for watching and I will see
you<00:02:35.819><c> in</c><00:02:36.000><c> the</c><00:02:36.120><c> next</c><00:02:36.180><c> one</c>

